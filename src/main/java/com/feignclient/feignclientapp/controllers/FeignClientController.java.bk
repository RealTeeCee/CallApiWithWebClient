package com.feignclient.feignclientapp.controllers;

import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;

import com.feignclient.feignclientapp.api.TagApiDelegate;
import com.feignclient.feignclientapp.model.BaseDto;
import com.feignclient.feignclientapp.model.TagDto;
import com.feignclient.feignclientapp.services.FeignTagService;

import lombok.RequiredArgsConstructor;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Component
@RequiredArgsConstructor
public class FeignClientController implements TagApiDelegate {
    private final FeignTagService feignTagService;

    @Override
    public Mono<ResponseEntity<BaseDto>> create(Mono<TagDto> tagDto, ServerWebExchange exchange) {
        return tagDto.flatMap(tag -> Mono.just(ResponseEntity.ok(feignTagService.create(tag))));
    }

    @Override
    public Mono<ResponseEntity<Flux<TagDto>>> getAllTags(ServerWebExchange exchange) {
        return Mono.just(ResponseEntity.ok(Flux.fromIterable(feignTagService.findAll())));
    }

}
